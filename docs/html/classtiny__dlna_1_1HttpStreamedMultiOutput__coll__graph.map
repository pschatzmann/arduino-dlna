<map id="tiny_dlna::HttpStreamedMultiOutput" name="tiny_dlna::HttpStreamedMultiOutput">
<area shape="rect" id="node1" title="Generic HttpStreamedMultiOutput Class which handles multicast streaming. We can optionally define som..." alt="" coords="904,83,1119,125"/>
<area shape="rect" id="node2" href="$classtiny__dlna_1_1HttpStreamedOutput.html" title="Abstract class for handling streamed output." alt="" coords="581,13,807,40"/>
<area shape="rect" id="node3" href="$classtiny__dlna_1_1Str.html" title="String implementation which keeps the data on the heap. We grow the allocated memory only if the copy..." alt="" coords="640,64,748,91"/>
<area shape="rect" id="node4" href="$classtiny__dlna_1_1StrView.html" title="A simple wrapper to provide string functions on char*. If the underlying char* is a const we do not a..." alt="" coords="313,5,453,32"/>
<area shape="rect" id="node5" href="$classtiny__dlna_1_1Vector.html" title=" " alt="" coords="312,57,455,98"/>
<area shape="rect" id="node6" href="$classtiny__dlna_1_1Allocator.html" title="Memory allocateator which uses malloc." alt="" coords="5,64,153,91"/>
<area shape="rect" id="node7" href="$classtiny__dlna_1_1List.html" title=" " alt="" coords="279,123,488,149"/>
<area shape="rect" id="node8" href="$structtiny__dlna_1_1List_1_1Node.html" title=" " alt="" coords="11,169,147,210"/>
<area shape="rect" id="node9" href="$classtiny__dlna_1_1HttpChunkWriter.html" title="Writes the data chunked to the actual client." alt="" coords="595,177,793,204"/>
</map>
